apiVersion: apps/v1
kind: Deployment
metadata:
  name: hub
  labels:
    component: hub
    app: jupyterhub
spec:
  replicas: 1
  selector:
    matchLabels:
      component: hub
      app: jupyterhub
  strategy:
    rollingUpdate: null
    type: Recreate
  template:
    metadata:
      labels:
        component: hub
        app: jupyterhub
        hub.jupyter.org/network-access-proxy-api: "true"
        hub.jupyter.org/network-access-proxy-http: "true"
        hub.jupyter.org/network-access-singleuser: "true"
    spec:
      {{- if .Values.hub.nodeSelector }}
      nodeSelector: 
        jupyterhub: {{ .Values.hub.nodeSelector | quote }}
      {{- end }}
      {{- if .Values.hub.storage.enabled }}
      volumes:
      {{- .Values.hub.storage.volumes | toYaml | trimSuffix "\n" | nindent 8 }}
      {{- end }}
      serviceAccountName: hub
      securityContext:
        runAsUser: 0
        fsGroup: 0  
      containers:
        - name: hub
          image: {{ .Values.hub.image }}:{{ .Values.hub.imageTag }}
          command:
            - jupyterhub
            - --config
            - /srv/jupyterhub_config.py
          {{- if .Values.hub.storage.enabled }}
          volumeMounts:
          {{- .Values.hub.storage.volumeMounts | toYaml | trimSuffix "\n" | nindent 12 }}  
          {{- end }}
          imagePullPolicy: Always
          env:
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: HELM_RELEASE_NAME
              value: {{ .Release.Name }}
            - name: JPY_COOKIE_SECRET
              value: {{ .Values.hub.secret }}
            - name: POD_NAMESPACE
              value: {{ .Release.Namespace }}
            - name: CONFIGPROXY_AUTH_TOKEN
              value: {{ .Values.proxy.secret }}
            - name: SU_TIMEOUT
              value: {{ .Values.hub.timeout | quote }}
            - name: LOG_LEVEL
              value: {{ .Values.hub.loglevel | quote}}
          ports:
            - containerPort: 8081
---
apiVersion: v1
kind: Service
metadata:
  name: hub
spec:
  type: ClusterIP
  selector:
    component: hub
    app: jupyterhub
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hub
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hub
rules:
  - apiGroups: [""]
    resources: ["pods", "persistentvolumeclaims"]
    verbs: ["get", "watch", "list", "create", "delete"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "watch", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hub
subjects:
  - kind: ServiceAccount
    name: hub
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: hub
  apiGroup: rbac.authorization.k8s.io
---
